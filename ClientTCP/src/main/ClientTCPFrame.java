/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

/**
 *
 * @author Borja
 */

import java.io.*;
import java.net.*;
import java.util.Random;


public class ClientTCPFrame extends javax.swing.JFrame {

    
    
    /**
     * Creates new form ClientTCPFrame
     */
    public ClientTCPFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageLbl = new javax.swing.JLabel();
        HxLbl = new javax.swing.JLabel();
        messageTxt = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        generateMessageButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        messageLbl.setText("Message");

        HxLbl.setText("0x");

        messageTxt.setEditable(false);
        messageTxt.setEnabled(false);

        sendButton.setText("Send Message");
        sendButton.setEnabled(false);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        generateMessageButton.setText("Generate Random Message");
        generateMessageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateMessageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(HxLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(messageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(generateMessageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(sendButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(messageLbl)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(messageLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HxLbl)
                    .addComponent(messageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateMessageButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendButton)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    //Function to convert decimal to Hex

    public static String decimal2Hex(int decimal) {
        
    
        
         return Integer.toHexString(decimal);
        
        
    }
    
    //Function to generate random number
    
    public static int randMessage(int min, int max) {

    
  
    Random rand = new Random();

    // nextInt is normally exclusive of the top value,
    // so add 1 to make it inclusive
    int randomNum = rand.nextInt((max - min) + 1) + min;

    return randomNum;
}
    
    
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
       
        Socket socket;
        
   
        
       
        String message="";  //Variable that contains the message
        
        
        
      
        try {

                socket = new Socket("127.0.0.1",6000); //connection at localhost and port 6000
 
                //"out" is a DataOutputStream object that will serve us to send data to server
                DataOutputStream out = new DataOutputStream(socket.getOutputStream());
 
                 //Get the message oh the textbox
                message = messageTxt.getText();
 
                //We send the encripted message
                out.writeUTF(message); 

                 //Clean the textBox
                messageTxt.setText("");

            } 

        catch (Exception e) {

                System.err.println(e.getMessage());
                System.exit(1);
            }
        
        sendButton.setEnabled(false);
        
        
        
    }//GEN-LAST:event_sendButtonActionPerformed

    private void generateMessageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateMessageButtonActionPerformed
        
        
        
        String randomMessage = "";
        
        //We generate the 16 first random bytes
        
        for (int i=0; i<16; i++){
            
           int degrees = randMessage(17, 255);
           
           String Hex = decimal2Hex(degrees);
           
           System.out.println(i + "." + Hex);
           
           randomMessage = randomMessage + Hex;
            
        }
        
        //We generate the temperature random bytes ( Values between 30 and 50)
        for (int i=0; i<1; i++){
            
           int degrees = randMessage(30, 50);
           
           String Hex = decimal2Hex(degrees);
           
           randomMessage = randomMessage + Hex;
            
        }
        
        //I think that always end at "00" because we use LittleEndian
        
         randomMessage = randomMessage + "00";
        
        messageTxt.setText(randomMessage);
        sendButton.setEnabled(true);
        
        
    }//GEN-LAST:event_generateMessageButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientTCPFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientTCPFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientTCPFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientTCPFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientTCPFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HxLbl;
    private javax.swing.JButton generateMessageButton;
    private javax.swing.JLabel messageLbl;
    private javax.swing.JTextField messageTxt;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
